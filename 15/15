WEBSTORAGE
  - I.60 и DevTools - вкладка Application (пример в консоли)
  - localStorage.getItem('ключ') возвращает null, если такового ключа нет в хранилище, однако использование вот
    такого синтаксиса - localStorage['ключ'] (как у обычных объектов) - вернет undefined
  - Session Storage - см. скрин
  - Событие storage - см. пример

ОБЩЕНИЕ МЕЖДУ КЛИЕНТОМ И СЕРВЕРОМ
  - См. скрины

AJAX
  О возможностях AJAX и COMET:
    - https://learn.javascript.ru/ajax-intro
    - В ES7 используется технология fetch

  Основы XMLHttpRequest:
    - Разбор основных методов и свойств класса XMLHttpRequest, предназначенных для создания, отправки запроса и
      получения ответа - см. пример

    DevTools - вкладка Network:
      - Что можно делать во вкладке
      - Разбор составляющих запроса
      - Заголовки
      - Cookies и работа с ними - см. скрины + вкладка Application

  Отправка данных:
    - Методы запросов и форматы отправки данных при их использовании - см. пример

  Какой запрос считается кросс-доменным:
    - https://learn.javascript.ru/same-origin-policy, плагин Allow CORS

  API:
    - Это интерфейс (на бэк-энде), который содержит в себе обработчики потенциально предполагаемых запросов и
      выступает связующим звеном между клиентом (фронт-энд приложением) и базой данных

ИНФОРМАЦИЯ ПРО ИТОГОВЫЙ ПРОЕКТ
  Общие критерии - 13.5:
    - Адекватная файловая структура - 0.5
    - Скрипты и библиотеки подключаются правильно, есть тег мобильной поддержки - 0.5
    - Красота кода - 2:
      - Аккуратные отступы и одинаковые кавычки - 0.5
      - Используется 1 вид синтаксиса JS - 0.5
      - Отсутствует неиспользуемый код и дебаггеры - 0.5
      - Адекватные имена переменных и функций - 0.5
    - Обработка потенциальных ошибок (используя try/catch) - 0.5
    - Оптимизация кода (неизобретение велосипедов) - 2

    - Отсутствуют баги и ошибки в консоли - 1.5
    - Корректная работа навигации и перезагрузки страницы - 1.5
    - Адаптивность и использование препроцессоров - 1.5
    - Логическая завершенность проекта - 1.5
    - Сложность проекта - 2

  Технологии - 6.5:
    - Модульность и ООП - 1
    - Ajax и NodeJS - 1.5
    - Сборщик проекта WebPack - 1
    - Темплейты - 1
    - Самостоятельно изученные технологии - напр. анимации, параллакс, диаграммы, графика, drag'n'drop, работа с мультимедиа,
      возможности Node.js - напр. отправка файлов на сервер, отправка писем или регистрация, лоадеры WebPack для шрифтов
      или изображений, тесты, подключение базы данных, фишки из ES7-8 и т.д. - 2

  За основательный копипаст моего приложения-примера оценка за проект снижается на 1 балл.

  Примеры выпускных проектов:
    - http://fe.it-academy.by/Projects/Projects_JSE.html
    - Проекты моих студентов
    - Идеи проектов - тест, to-do list, счетчик каллорий, конвертер валют, учет доходов и расходов, кроссворд, обучалка,
      интернет-магазин, конструктор сайта, приложение для тренировок, алкогольный калькулятор, медицинский калькулятор,
      виртуальный гардероб, анализатор состава еды/косметики, продажа билетов на концерты, обучение слепой печати,
      комиксы, сервировка стола, pos-система, конструктор пиццы, виртуальное фортепиано, игрушки

ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ *
  - AJAX - https://learn.javascript.ru/ajax-xmlhttprequest
  - Методы кодировки - escape(), encode-/decodeURI(), encode-/decodeURIComponent() - http://s3blog.org/escape-encodeuri-encodeuricomponent.html
  - Пути к файлам - http://www.uamedwed.com/blog/web/absolyutnyj-i-otnositelnyj-put-k-fajlam.html
  - Список кодов состояния - https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%BA%D0%BE%D0%B4%D0%BE%D0%B2_%D1%81%D0%BE%D1%81%D1%82%D0%BE%D1%8F%D0%BD%D0%B8%D1%8F_HTTP
  - Слайд F.90 - Кроссбраузерность — полифилл, фолбек, изящный отказ, постепенное улучшение

ДОМАШНЕЕ ЗАДАНИЕ
  Задание 1:
    Практическое задание (продолжение предыдущего задания):
      По кликам на ссылки второго абзаца проверять, если информации об этой ссылке нет в LS - записать ее туда. Ключом
      должен быть текст ссылки, а значением объект вида { path: (путь ссылки) }. После записи изменить значение атрибута
      href ссылки на "#" и выводить alert с уведомлением о том, что ссылка была сохранена.
      Если же информация об этой ссылке уже записана в LS, выводить в alert путь ссылки из объекта из хранилища.
      При загрузке страницы localStorage должен очищаться.

  Задание 2:
    Добавить на страницу два поля для ввода - X и Y и кнопку "Create".
    Если хотя бы одно из полей пустое - кнопка дизэйблится (делать по keyup).
    Поля должны принимать только целые числа от 1 до 10, в противном случае должно выводиться сообщение об ошибке
    (делать по click).
    По клику на кнопку должна отрисоваться шахматная доска с размерами X по горизонтали и Y по вертикали.
    При введении значений X и Y заново таблица должна корректно перерисоваться.
    По клику на любое поле доски - цвета всех полей должны изменяться на противоположные.
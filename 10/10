ПРОТОТИПНЫЙ СТИЛЬ ООП
  Встроенные классы в JavaScript, добавление кастомных методов в эти классы:
    - http://web.archive.org/web/20190405104458/http://learn.javascript.ru/native-prototypes
    - Метод встроенного класса Array для подсчета суммы элементов массива - см. скрин

  Описание собственного класса, сравнение двух стилей программирования:
    - http://web.archive.org/web/20190405104458/http://learn.javascript.ru/classes
    - Приватные свойства и методы в прототипном стиле становятся защищенными и записываются через _ (методы записываются
      в prototype), публичные свойства и методы таковыми и остаются
    - Геттеры и сеттеры работают соответственно с защищенными свойствами

  Прототипное наследование, расширение метода родителя:
    - http://web.archive.org/web/20190405104458/http://learn.javascript.ru/class-inheritance
    - Cпособы прототипного наследования - см. скрин

  Проверка класса через операцию instanceof:
    - http://web.archive.org/web/20190405104458/http://learn.javascript.ru/instanceof
    - Примитивы не являются instanceof своего класса!

ДОМАШНЕЕ ЗАДАНИЕ
  Задание 1:
    Переписать предыдущий пример с кошками на прототипный стиль ООП.

  Задание 2:
    Написать функцию, возвращающую глубокую копию объекта - его клон. Клонироваться должны значения всех типов данных
    (+ массивы и функции), а также любого уровня вложенности. Метод isArray использовать можно.

    Протестировать работу функции можно на таком примере:
      var initialObj = {
          string: 'Vasya',
          number: 30,
          boolean: true,
          undefined: undefined,
          null: null,
          array: [1, 2, 3],
          object: {
              string2: 'Petrov',
              object2: {
                  array2: [{}, {}]
              },
              object3: {}
          },
          method: function() {
              alert('Hello');
          }
      };

      var clonedObj = deepClone(initialObj);

      clonedObj.object.object2.array2[1].name = 'Vasya';
      clonedObj.array.push(2);

      console.log(initialObj);
      console.log(clonedObj);

  Задание 3:
    Написать функцию глубокого сравнения объектов, возвращающую boolean. Сравниваться должны значения всех типов данных
    (+ массивы и функции), а также любого уровня вложенности. Для определения длины объектов разрешается использовать
    метод Object.keys(). Хорошо протестировать работу функции (можно на объекте из пред. задания).
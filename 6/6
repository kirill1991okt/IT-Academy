ФУНКЦИИ
  Callback или функция обратного вызова:
    - Это функция, передающаяся как параметр в другую функцию, полученный код функции-коллбэка может вызываться внутри
      принимающей функции
    - См. скрины

  Замыкание:
    - "Поднятие" переменных и функций - https://developer.mozilla.org/ru/docs/%D0%A1%D0%BB%D0%BE%D0%B2%D0%B0%D1%80%D1%8C/%D0%9F%D0%BE%D0%B4%D0%BD%D1%8F%D1%82%D0%B8%D0%B5
    - https://learn.javascript.ru/closures (до главы "Возврат функции")
    - Замыкание - это функция вместе со всеми внешними переменными, доступными ей
    - Схема замыкания и поиска переменных - см. скрин
    - Самовызывающаяся функция (IIFE) - см. скрин - является синтаксисом замыкания
    - Пример изоляции области видимости с помощью самовызывающейся функции

  Каррирование:
    - Это создание новой функции путём фиксирования аргументов существующей
    - См. скрин
    - http://prgssr.ru/development/vvedenie-v-karrirovanie-v-javascript.html#heading-section-1 - глава "Каррируем всё"

ДОПОЛНИТЕЛЬНАЯ ИНФОРМАЦИЯ *
  Строгий режим "use strict":
    - См. скрины
    - Режим может устанавливаться как для всего скрипта, так и для отдельной функции

ОТЛАДКА КОДА
  - console.log, debugger (создать пример html + js)

  DevTools - вкладка Sources:
    - Точка остановки называется Breakpoint
    - Находясь на точке остановки можно выводить значение переменных или целых операций в консоль
    - F8 - используется для движения по брейкпоинтам
    - F10 - используется для построчного выполнения кода
    - Ctrl + O - используется для поиска нужного файла
    - Из красных ошибок в консоли всегда можно перейти к строке кода, в которой возникла ошибка

СОВЕТЫ ПО СТИЛЮ КОДА
  - http://web.archive.org/web/20190405104506/http://learn.javascript.ru/coding-style

ОБЩИЕ СОВЕТЫ
  - Использовать разные классы для JS и CSS
  - Разработка задачи - изначально стоит разбить задачу на под-задачи, далее можно писать "сложный" и некрасивый код,
    а уже после - его оптимизировать
  - Постоянно рефакторить свой код. Рефакторинг это - улучшение, оптимизация, сокращение и избавление от лишнего кода
  - Обязательно тестировать все возможные сценарии поломки вашего кода перед отправкой его ревьюеру
  - Сохранять себе скриншоты-памятки в классифицированную папку для быстрого, удобного и эффективного повторения
    при подготовке к собеседованиям
  - Практиковаться в решении задачек на CodeWars
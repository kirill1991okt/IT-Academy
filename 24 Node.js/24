NODE.JS
  - Node.js - это программная платформа, превращающая JavaScript из узкоспециализированного языка в язык общего назначения
  - NPM - пакетный менеджер, используемый Node.js-приложениями
  - Возможности Node.js
  - Что такое REST API - 

  Для работы с Node.js понадобятся файлы:
    - package.json - файл с информацией о необходимых модулях
    - сами npm-модули в папке node_modules
    - tasks.json - импровизированная база данных
    - server.js - непосредственно наше API

  При использовании Git - стоит сразу добавить в .gitignore папки node_modules (!!!), .idea и файл package-lock.json

  Разворачивание сервера:
    - Установить Node.js
    - Перейти в папку 'api' проекта в консоли (используя cmd либо WS Terminal):
      d: - перейти на диск D
      dir - показать вложенные директории

      cd .. - подняться на директорию вверх
      cd "My Folder" - перейти во внутреннюю директорию с названием My Folder
      cd + нажатие на tab - поиск внутренней директории
      cd + начало ввода имени директории + tab - автоматическая подсказка имени директории

      клавиша "Вверх" - поиск ранее введенной команды
    - Выполнить команду 'npm i' для установки необходимых модулей
    - Выполнить команду 'npm start' для запуска сервера

  При последующих запусках сервера понадобятся только команды 2 и 4.
  Для того, чтобы сервер работал - консоль с запущенным сервером должна быть открыта!
  Для остановки сервера использовать команду Ctrl + C

  Для дебаггинга server.js файла использовать console.log (результат будет отображаться в консоли, где запущен сервер)

  Front-end часть проекта запускается как и раньше, через Fenix, однако теперь нужно указывать путь к папке frontend, и
  порты серверов обязательно должны быть разными

  Используемые модули:
    - Модуль 'express' - предоставляет удобный синтаксис и готовые функции для работы с Node.js
    - Модуль 'body-parser' - отвечает за грамотный парсинг тела приходящих на сервер запросов
    - Модуль 'file-system' - дает возможность манипулировать файлами на компьютере
    - Модуль 'nodemon' - используется для автоматического перезапуска сервера
    - Модуль 'morgan' - используется для логгирования информации о приходящих на сервер запросах
    - Модуль 'shortid' - используется для генерации случайного идентификатора

РАЗБОР ПРИЛОЖЕНИЯ
  - Схема связи браузера, сервера и базы данных
  - Схема работы промисов (вложенность)

ДОМАШНЕЕ ЗАДАНИЕ (без переносов)
  Задание 1:
    Доделать логику работы с Node.js, связанную с изменением статуса задачи, удалением задачи, очищением списка задач.

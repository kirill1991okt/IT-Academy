ОБРАБОТКА ИСКЛЮЧЕНИЙ
  - A.78 (первые 2 стр. + finally)
  - Порождать ошибку можно также через throw new Error('Something went wrong')

  Практическое задание:
    Создать GET-запрос по адресу https://reqres.in/api/users?page=2. Проверить, получаются ли данные с сервера.
    Описать свой блок try/catch в обработчике успешного запроса. В try попытаться распарсить JSON-ответ с сервера.
    Если исключения не возникает - породить его самостоятельно (попробовать 2 способа порождения).
    Если возникает исключение (строка некорректная) - в блоке catch вывести в консоль информацию об ошибке.
    Протестировать оба варианта. Убедиться, что код после блока try/catch продолжает выполняться.

ОПТИМИЗАЦИЯ СКОРОСТИ ЗАГРУЗКИ СТРАНИЦЫ
  - См. скрины

ДОМАШНЕЕ ЗАДАНИЕ
  Задание 1:
    Добавить на страницу кнопку "Загрузить список пользователей".
    По клику на нее осуществляется AJAX (GET) запрос на https://reqres.in (List Users).
    В случае успешного получения данных:
      - ДИНАМИЧЕСКИ добавить на страницу вкладки "Пользователь 1", "Пользователь 2" и т.д.
      (в соотв. с количеством пользователей)
      - сделать первую вкладку активной и показать под ней блок с информацией о пользователе
      - вкладки должны иметь возможность переключаться и отображать соответствующие данные
      - полученные данные должны записываться в LocalStorage *
      - по клику на кнопку должна происходить проверка, если данные есть в LocalStorage, не отправлять AJAX запрос, а
        сразу отрисовывать их *
    В случае ошибки получения данных (протестировать можно, изменив url запроса как в примере с урока):
      - отрисовать на странице сообщение о том, что данные не получены, в произвольном виде
    Перед отправкой ОБЯЗАТЕЛЬНО (!!!) порефакторить код и протестировать ваше приложение на работоспособность и
    максимально на отсутствие багов.
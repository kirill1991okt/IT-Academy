EVENT LOOP
  - Javascript - однопоточный (один стэк вызовов) и синхронный язык программирования (пока выполняется одно действие -
    другие не выполняются)
  - https://stasonmars.ru/javascript/polnoe-ponimanie-syncronnogo-i-asyncronnogo-javascript-s-async-await/
  - https://habr.com/en/company/ruvds/blog/340508/
  - Очередь (Queue) - "First-in - first-out"
  - Стэк (Stack) - "First-in - last-out"
  - Живой пример работы EL -
    http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D
  - setTimeout(func, 0) используется для того, чтобы какое-либо действие выполнилось последним в рамках функции

РЕГУЛЯРНЫЕ ВЫРАЖЕНИЯ
  - K.60 - Регулярные выражения
  - Синтаксис регулярных выражений - https://msdn.microsoft.com/ru-ru/library/ae5bf541(v=vs.100).aspx
  - Методы для работы с регулярными выражениями и примеры применения -
    http://web.archive.org/web/20190405104436/http://learn.javascript.ru/regexp-methods

  Доп. инфо *:
    - Опережающие и ретроспективные проверки - https://learn.javascript.ru/regexp-lookahead-lookbehind

ДОМАШНЕЕ ЗАДАНИЕ
  Задание 1:
    Написать регулярное выражение, которое будет тестировать на соответствие строки вида - name_surname-1234@gmail.com :
      - имя и фамилия должны состоять только из англ. букв и быть длиной (каждая часть) от 3 до 10 символов, между
        ними _ обязательно
      - далее опциональная часть, начинающаяся с тире и состоящая из 4-х цифр
      - затем обязательный знак @
      - название почтового сервиса должно быть длиной от 2-х до 20-ти символов, может состоять из букв английского
        алфавита и цифр, а также опционально может содержать в центре себя одно тире или одну точку
      - сделать так, чтобы точка или тире, указанные выше, могли содержаться в любом месте внутри почтового сервиса,
        кроме начала и конца *
      - обязательная часть .com
    Хорошо протестировать регулярное выражение.

  Задание 2:
    Написать функцию, которая с помощью регулярного выражения будет тестировать на соответствие строки вида:
      +375-25-777-77-77
      375299999999
      8-044-444-44-44
      8033-6666666
    и возвращать boolean.

    Условия:
      - + перед 375 - опциональный
      - номер может начинаться с 375 (без 0) либо с 80
      - номер должен содержать один из кодов - 25, 29, 33, 44 либо 17
      - основная часть номера не может начинаться с 0
      - некоторые или все тире могут быть пропущены, но расположение тех, которые пропущены не будут, может быть только
        таким, как в примерах 1 и 3

    Перед отправкой постараться максимально оптимизировать своё решение и убрать все лишнее.

  Задание 3:
    Переписать решение задачи с поиском гласных с использованием регулярного выражения. Протестировать ситуацию, когда
    гласных в переданном тексте будет 0. По возможности придумать несколько вариантов решения.
